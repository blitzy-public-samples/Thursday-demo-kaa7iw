# Human Tasks:
# 1. Ensure the PROJECT_ID environment variable is set in your deployment pipeline
# 2. Verify that the GCP service account exists and has necessary IAM roles
# 3. Confirm that Workload Identity is enabled in your GKE cluster
# 4. Validate that the service account name follows DNS-1123 subdomain format

# Kubernetes v1.24+ ServiceAccount configuration
# Addresses requirements:
# - Authentication and Authorization (10.1.1 Authentication Flow)
# - Security Integration (10.2.1 Data Classification)
# - Google Cloud Integration (11.2.1 Google Cloud Platform Services)

apiVersion: v1
kind: ServiceAccount
metadata:
  name: code-generation-app-sa
  namespace: code-generation-app  # Referenced from namespace.yaml
  labels:
    # Core application labels
    app: code-generation-app
    component: service-account
    managed-by: kustomize
    
    # Additional labels for resource organization
    tier: application
    version: v1
    environment: ${ENV}
    
  annotations:
    # Workload Identity configuration for GCP integration
    iam.gke.io/gcp-service-account: code-generation-app@${PROJECT_ID}.iam.gserviceaccount.com
    
    # Application metadata
    app.kubernetes.io/part-of: code-generation-app
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/component: service-account
    
    # Security annotations
    security.kubernetes.io/enforce-workload-identity: "true"
    iam.gke.io/workload-identity-enabled: "true"
    
    # Description
    description: "Service account for Code Generation Application pods"

automountServiceAccountToken: true  # Enable automatic token mounting for pods

# No explicit secrets needed as they are managed by Workload Identity
# No explicit imagePullSecrets needed as they are managed by GKE