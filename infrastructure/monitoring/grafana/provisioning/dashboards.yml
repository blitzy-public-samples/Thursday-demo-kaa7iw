# Human Tasks:
# 1. Ensure the /etc/grafana/dashboards directory exists and has proper permissions in the Grafana container
# 2. Verify that the Grafana instance has access to read the dashboard JSON files
# 3. Confirm that the Prometheus data source is properly configured before loading dashboards

# Grafana version: 9.0+
# Purpose: Automatically provisions monitoring dashboards for API, database, and system metrics

# Addresses requirements:
# - System Monitoring (7.5 Technology Stack): Prometheus & Grafana monitoring integration
# - Infrastructure Monitoring (11.1.2 Environment Specifications): Health checks and performance monitoring
# - Security Monitoring (10.3.3 Security Monitoring): Security metrics and monitoring dashboard configuration

apiVersion: 1

providers:
  # Code Generation Web Application Dashboards
  - name: 'Code Generation Dashboards'
    orgId: 1
    folder: 'Code Generation'
    folderUid: 'code_generation'
    type: file
    disableDeletion: true
    updateIntervalSeconds: 60
    allowUiUpdates: false
    options:
      # Path to dashboard JSON files
      path: /etc/grafana/dashboards
      # Use folder structure from files
      foldersFromFilesStructure: true
    
    # Dashboard configuration
    defaults:
      editable: false
      style: 'dark'
      
      # Default datasource
      datasources:
        - name: 'Prometheus'
          type: 'prometheus'
          access: 'proxy'
          
      # Default refresh intervals
      refresh: ['10s', '30s', '1m', '5m', '15m', '30m', '1h']
      
      # Default time range
      time:
        from: 'now-6h'
        to: 'now'
      
      # Default timezone
      timezone: 'browser'

    # Security settings
    permissions:
      - role: 'Viewer'
        permission: 'View'
      - role: 'Editor'
        permission: 'Edit'
      - role: 'Admin'
        permission: 'Admin'

    # Dashboard definitions
    dashboards:
      # API Monitoring Dashboard
      - name: 'API Monitoring'
        file: 'api.json'
        type: 'file'
        disableDelete: true
        message: 'API performance and health metrics dashboard'
        
      # Database Monitoring Dashboard  
      - name: 'Database Monitoring'
        file: 'database.json'
        type: 'file'
        disableDelete: true
        message: 'PostgreSQL and Redis monitoring dashboard'
        
      # System Monitoring Dashboard
      - name: 'System Monitoring'
        file: 'system.json'
        type: 'file'
        disableDelete: true
        message: 'System-wide resource and health monitoring dashboard'

    # Alert notification settings
    alerting:
      # Default notification channel
      notifications:
        - uid: default_email
          name: 'Default Email Channel'
          type: email
          isDefault: true
          settings:
            addresses: 'alerts@example.com'

    # Version control settings
    version_control:
      enabled: true
      type: git
      settings:
        autoCommit: true
        commitMessage: 'Dashboard update: ${dashboard.title}'